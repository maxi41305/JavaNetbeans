/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Login;
import CargaDatos.CargaAlquiler;
import CargaDatos.CargaGastos;
import CargaDatos.CargaSocios;
import CargaDatos.CargarIngresoss;
import CargaDatos.Pedidos;
import CargaDatos.VerAlquiler;
import CargaDatos.VerGastos;
import CargaDatos.VerIngresos;
import CargaDatos.VerSocios;
import CargaDatos.plantilla;
import Ingreso.ConexionMySQL;
import com.itextpdf.text.DocumentException;
import static com.sun.org.apache.xalan.internal.lib.ExsltDatetime.time;
import java.awt.Dimension;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Time;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
/**
 *
 * @author maxii
 */
public class Sistema extends javax.swing.JFrame {

        //CONECCION CON BASE DE DATOS
    ConexionMySQL cc=new ConexionMySQL(); 
    Connection con=ConexionMySQL.GetConnection(); 
    public Sistema() {
        initComponents();
        this.setLocationRelativeTo(null);
         this.setExtendedState(6);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu4 = new javax.swing.JMenu();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu7 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        VentanaPrincipal = new javax.swing.JPanel();
        btningresesocio = new javax.swing.JButton();
        btningresealquiler = new javax.swing.JButton();
        btnganancia = new javax.swing.JButton();
        btngastos = new javax.swing.JButton();
        btningresos = new javax.swing.JButton();
        btnGastos = new javax.swing.JButton();
        btnalquileres = new javax.swing.JButton();
        btncierre = new javax.swing.JButton();
        btnsocio = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        MenuPrincipal = new javax.swing.JMenu();
        MenuPedidos = new javax.swing.JMenu();
        jMenu6 = new javax.swing.JMenu();
        jMenu8 = new javax.swing.JMenu();
        MenuCerrarSecion = new javax.swing.JMenu();

        jMenuItem1.setText("jMenuItem1");

        jMenu4.setText("File");
        jMenuBar2.add(jMenu4);

        jMenu5.setText("Edit");
        jMenuBar2.add(jMenu5);

        jMenuItem2.setText("jMenuItem2");

        jMenu7.setText("jMenu7");

        jMenuItem3.setText("jMenuItem3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAutoRequestFocus(false);
        setBackground(new java.awt.Color(255, 255, 255));

        VentanaPrincipal.setBackground(new java.awt.Color(153, 204, 255));
        VentanaPrincipal.setForeground(new java.awt.Color(255, 255, 255));

        btningresesocio.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 1, 11)); // NOI18N
        btningresesocio.setText("Ingresar Socio");
        btningresesocio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btningresesocioActionPerformed(evt);
            }
        });

        btningresealquiler.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 1, 11)); // NOI18N
        btningresealquiler.setText("Ingresar Aquiler");
        btningresealquiler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btningresealquilerActionPerformed(evt);
            }
        });

        btnganancia.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 1, 11)); // NOI18N
        btnganancia.setText("Ingresar Ganancias");
        btnganancia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btngananciaActionPerformed(evt);
            }
        });

        btngastos.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 1, 11)); // NOI18N
        btngastos.setText("ingresar Gastos");
        btngastos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btngastosActionPerformed(evt);
            }
        });

        btningresos.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 1, 11)); // NOI18N
        btningresos.setText("Ver Ingresos");
        btningresos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btningresosActionPerformed(evt);
            }
        });

        btnGastos.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 1, 11)); // NOI18N
        btnGastos.setText("Ver Gastos");
        btnGastos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGastosActionPerformed(evt);
            }
        });

        btnalquileres.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 1, 11)); // NOI18N
        btnalquileres.setText("Ver Alquileres");
        btnalquileres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnalquileresActionPerformed(evt);
            }
        });

        btncierre.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 1, 11)); // NOI18N
        btncierre.setText("Cierre de Caja");
        btncierre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncierreActionPerformed(evt);
            }
        });

        btnsocio.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 1, 11)); // NOI18N
        btnsocio.setText("Ver Socios");
        btnsocio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsocioActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/GASTO.png"))); // NOI18N

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/INGRESAR SOCIO.png"))); // NOI18N

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/ALQUILERES.png"))); // NOI18N

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/INGRESOS.png"))); // NOI18N

        javax.swing.GroupLayout VentanaPrincipalLayout = new javax.swing.GroupLayout(VentanaPrincipal);
        VentanaPrincipal.setLayout(VentanaPrincipalLayout);
        VentanaPrincipalLayout.setHorizontalGroup(
            VentanaPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VentanaPrincipalLayout.createSequentialGroup()
                .addGap(160, 160, 160)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addGap(176, 176, 176))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, VentanaPrincipalLayout.createSequentialGroup()
                .addGap(215, 215, 215)
                .addGroup(VentanaPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnGastos, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btningresos, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(VentanaPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnalquileres, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btningresealquiler, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(215, 215, 215))
            .addGroup(VentanaPrincipalLayout.createSequentialGroup()
                .addGroup(VentanaPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(VentanaPrincipalLayout.createSequentialGroup()
                        .addGap(197, 197, 197)
                        .addGroup(VentanaPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnsocio, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btningresesocio, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(VentanaPrincipalLayout.createSequentialGroup()
                        .addGap(141, 141, 141)
                        .addComponent(jLabel8))
                    .addGroup(VentanaPrincipalLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btncierre)))
                .addGroup(VentanaPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(VentanaPrincipalLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(VentanaPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnganancia, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btngastos, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(217, 217, 217))
                    .addGroup(VentanaPrincipalLayout.createSequentialGroup()
                        .addGap(550, 550, 550)
                        .addComponent(jLabel10)
                        .addContainerGap(174, Short.MAX_VALUE))))
        );
        VentanaPrincipalLayout.setVerticalGroup(
            VentanaPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VentanaPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(VentanaPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(VentanaPrincipalLayout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnalquileres)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btningresealquiler)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(VentanaPrincipalLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnGastos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btningresos)
                        .addGap(22, 22, 22)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(VentanaPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btngastos)
                    .addComponent(btningresesocio))
                .addGap(8, 8, 8)
                .addGroup(VentanaPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnganancia)
                    .addComponent(btnsocio))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btncierre)
                .addGap(505, 505, 505))
        );

        jMenuBar1.setBackground(new java.awt.Color(255, 255, 255));
        jMenuBar1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        MenuPrincipal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/menu 11111111.png"))); // NOI18N
        MenuPrincipal.setText("MENU PRINCIPAL");
        MenuPrincipal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MenuPrincipalMouseClicked(evt);
            }
        });
        jMenuBar1.add(MenuPrincipal);

        MenuPedidos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/mensaje.png"))); // NOI18N
        MenuPedidos.setText("PEDIDOS");
        MenuPedidos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MenuPedidosMouseClicked(evt);
            }
        });
        MenuPedidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuPedidosActionPerformed(evt);
            }
        });
        jMenuBar1.add(MenuPedidos);

        jMenu6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/CONFIGURACION.png"))); // NOI18N
        jMenu6.setText("CONFIGURACION");
        jMenuBar1.add(jMenu6);

        jMenu8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/AYUDA.png"))); // NOI18N
        jMenu8.setText("AYUDA");
        jMenuBar1.add(jMenu8);

        MenuCerrarSecion.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        MenuCerrarSecion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Salir.png"))); // NOI18N
        MenuCerrarSecion.setText("SALIR");
        MenuCerrarSecion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MenuCerrarSecionMouseClicked(evt);
            }
        });
        jMenuBar1.add(MenuCerrarSecion);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(VentanaPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(22, 22, 22))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(VentanaPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 654, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btngastosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btngastosActionPerformed
      CargaGastos form=new CargaGastos();
                    form.setVisible(true);
                    //this.dispose();
    }//GEN-LAST:event_btngastosActionPerformed

    private void btningresesocioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btningresesocioActionPerformed
     CargaSocios form=new CargaSocios();
                    form.setVisible(true);
                    //this.dispose();
    }//GEN-LAST:event_btningresesocioActionPerformed

    private void btningresealquilerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btningresealquilerActionPerformed
            CargaAlquiler form=new CargaAlquiler();
                    form.setVisible(true);
                   // this.dispose();
    }//GEN-LAST:event_btningresealquilerActionPerformed

    private void btngananciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btngananciaActionPerformed
      CargarIngresoss form=new CargarIngresoss();
                    form.setVisible(true);
                    //this.dispose();
    }//GEN-LAST:event_btngananciaActionPerformed

    private void btnGastosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGastosActionPerformed
            VerGastos form=new VerGastos();
                    form.setVisible(true);
                   // this.dispose();
    }//GEN-LAST:event_btnGastosActionPerformed

    private void btningresosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btningresosActionPerformed
        try {
            VerIngresos form=new VerIngresos();
            form.setVisible(true);
            //this.dispose();
        } catch (SQLException ex) {
            Logger.getLogger(Sistema.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btningresosActionPerformed

    private void btnalquileresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnalquileresActionPerformed
            VerAlquiler form=new VerAlquiler();
            form.setVisible(true);
            //this.dispose();
    }//GEN-LAST:event_btnalquileresActionPerformed

    private void btncierreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncierreActionPerformed
        try {
            int validacion=0;
            
            LocalDateTime locaDate = LocalDateTime.now();
            int horaa  = locaDate.getHour();
            int minuto = locaDate.getMinute();
            int segundo = locaDate.getSecond();
            DateFormat jjj = new SimpleDateFormat("hh:mm:ss");
            Time hora = new Time(horaa,minuto,segundo);
            //JOptionPane.showMessageDialog(null,"inserto correcto '" +hora+ "'");
            int horaaaa=23;
            int minutoo=30;
            int segundoo=0;
            DateFormat jjjj = new SimpleDateFormat("hh:mm:ss");
            Time horaaa = new Time(horaaaa,minutoo,segundoo);
            int horas=20;
            int minutos=0;
            int segundos=0;
            DateFormat jjjs = new SimpleDateFormat("hh:mm:ss");
            Time horaas = new Time(horas,minutos,segundos);
            int s=hora.compareTo(horaaa);
            
           
            
            java.util.Date dateeo = new java.util.Date();
            java.text.SimpleDateFormat smpo=new java.text.SimpleDateFormat("yyyy-MM-dd");
            String fechao = smpo.format(dateeo);
            
            //controlar que no cargue los datos dos veces de seguido
            String descripcioon="Cancha_pileta_salon";
            
            String SQLO="select * from ingresos where fecha= '" +fechao+ "' and descripcion='" +descripcioon+ "'";
            
            Statement sttl=con.createStatement();
            ResultSet rso=sttl.executeQuery(SQLO);
            int resultado=0;
            if(rso.next()){
                
                resultado=1;
            
            }
             if(hora.compareTo(horaaa) == -1){
                
                if(hora.compareTo(horaas) == 1){
                    
                    //aca traer fecha de base de datos y coparar con fecha de hoy para que no se cargue el mismo dia la misma caja
                    
                    if(resultado==0){
                    validacion=1;
                     JOptionPane.showMessageDialog(null,"caja cerrada");
                    }else{
                   
                     JOptionPane.showMessageDialog(null,"horario incorrecto o ya cerro la caja");
                    }
                    
                   
                }else{
                    JOptionPane.showMessageDialog(null,"Horario Incorrecto de Cierre de Caja");
                }
                
            } else{
                JOptionPane.showMessageDialog(null,"Horario Incorrecto de Cierre de Caja");
            }
            
            if(validacion==1){
                
                
                try {
                    //TODOS LOS DIAS
                    java.util.Date datee = new java.util.Date();   
                    java.text.SimpleDateFormat smp=new java.text.SimpleDateFormat("yyyy-MM-dd");
                    String fecha = smp.format(datee);
                    
                    
                    String SQLL="select precio from alquiler where fecha= '" +fecha+ "' ";
                    
                    
                    String descripcion="Cancha_pileta_salon";
                    
                    Statement stt=con.createStatement();
                    ResultSet rss=stt.executeQuery(SQLL);
                    
                    int Suma = 0;
                    
                    if(rss.next()){
                        
                        int totalDia = rss.getInt("precio");
                        Suma= totalDia+Suma;
                    }
                    
                    int idingresos =0 ;
                    
                    String SQLLL="select idingreso from ingresos";
                    Statement sto=con.createStatement();
                    ResultSet mp=sto.executeQuery(SQLLL);
                    
                    while(mp.next()){
                        idingresos=mp.getInt("idingreso");
                    }
                    idingresos=1+idingresos;
                    
                    PreparedStatement ppss;
                    ppss = con.prepareStatement("INSERT INTO ingresos(cuanto_ingreso,fecha,descripcion,idingreso)" + "VALUES (?,?,?,?)");
                    ppss.setInt(1,Suma);
                    ppss.setString(2,fecha);
                    ppss.setString(3,descripcion);
                    ppss.setInt(4,idingresos);
                    ppss.executeUpdate();
                    JOptionPane.showMessageDialog(null,"inserto correcto");
                    
                    
                    java.util.Date date = new java.util.Date();
                    java.text.SimpleDateFormat sdf=new java.text.SimpleDateFormat("yyyy-MM-dd");
                    String fechaa = sdf.format(date);
                    
                    //todos los meses
                    
                    if(fechaa=="2021/01/31")
                    {
                        try {
                            String mes="enero";
                            String SQL="Select SUM(cuanto_gasto) from gastos where fecha BETWEEN '2021/01/01' AND '2021/01/31' ";
                            Statement st=con.createStatement();
                            ResultSet ss=st.executeQuery(SQL);
                            int sumaGasto = 0;
                            if(ss.next()){
                                
                                int totalGasto = ss.getInt("precio");
                                sumaGasto= totalGasto+sumaGasto;
                            }
                            
                            String sql ="Select SUM(cuanto_ingreso) from ingresos where fecha BETWEEN '2021/01/01' AND '2021/01/31' ";
                            Statement mt=con.createStatement();
                            ResultSet pp=mt.executeQuery(sql);
                            int sumaIngreso = 0;
                            if(pp.next()){
                                
                                int totalIngreso = pp.getInt("precio");
                                sumaIngreso= totalIngreso+sumaIngreso;
                            }
                            int total;
                            total=sumaIngreso-sumaGasto;
                            
                            PreparedStatement pph;
                            pph = con.prepareStatement("INSERT INTO Resumen(totall,ingreso,gasto,mess)" + "VALUES (?,?,?,?)");
                            pph.setInt(1,total);
                            pph.setInt(2,sumaIngreso);
                            pph.setInt(3,sumaGasto);
                            pph.setString(4,mes);
                            pph.executeUpdate();
                            JOptionPane.showMessageDialog(null,"inserto correcto");
                        } catch (SQLException ex) {
                            Logger.getLogger(Sistema.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        
                        
                        
                    }else if(fechaa=="2021/02/28")
                    {
                        try {
                            String mes="febrero";
                            String SQL="Select SUM(cuanto_gasto) from gastos where fecha BETWEEN '2021/02/01' AND '2021/02/28' ";
                            Statement st=con.createStatement();
                            ResultSet ss=st.executeQuery(SQL);
                            int sumaGasto = 0;
                            if(ss.next()){
                                
                                int totalGasto = ss.getInt("precio");
                                sumaGasto= totalGasto+sumaGasto;
                            }
                            
                            String sql = "Select SUM(cuanto_ingreso) from ingresos where fecha BETWEEN '2021/02/01' AND '2021/02/28' ";
                            Statement mt=con.createStatement();
                            ResultSet pp=mt.executeQuery(sql);
                            int sumaIngreso = 0;
                            if(pp.next()){
                                
                                int totalIngreso = pp.getInt("precio");
                                sumaIngreso= totalIngreso+sumaIngreso;
                            }
                            int total;
                            total=sumaIngreso-sumaGasto;
                            
                            PreparedStatement pph;
                            pph = con.prepareStatement("INSERT INTO Resumen(totall,ingreso,gasto,mess)" + "VALUES (?,?,?,?)");
                            pph.setInt(1,total);
                            pph.setInt(2,sumaIngreso);
                            pph.setInt(3,sumaGasto);
                            pph.setString(4,mes);
                            pph.executeUpdate();
                            JOptionPane.showMessageDialog(null,"inserto correcto");
                        } catch (SQLException ex) {
                            Logger.getLogger(Sistema.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }else if(fechaa=="2021/03/31")
                    {
                        try {
                            String mes="marzo";
                            String SQL="Select SUM(cuanto_gasto) from gastos where fecha BETWEEN '2021/03/01' AND '2021/03/31' ";
                            Statement st=con.createStatement();
                            ResultSet ss=st.executeQuery(SQL);
                            int sumaGasto = 0;
                            if(ss.next()){
                                
                                int totalGasto = ss.getInt("precio");
                                sumaGasto= totalGasto+sumaGasto;
                            }
                            
                            String sql = "Select SUM(cuanto_ingreso) from ingresos where fecha BETWEEN '2021/03/01' AND '2021/03/31' ";
                            Statement mt=con.createStatement();
                            ResultSet pp=mt.executeQuery(sql);
                            int sumaIngreso = 0;
                            if(pp.next()){
                                
                                int totalIngreso = pp.getInt("precio");
                                sumaIngreso= totalIngreso+sumaIngreso;
                            }
                            int total;
                            total=sumaIngreso-sumaGasto;
                            
                            PreparedStatement pph;
                            pph = con.prepareStatement("INSERT INTO Resumen(totall,ingreso,gasto,mess)" + "VALUES (?,?,?,?)");
                            pph.setInt(1,total);
                            pph.setInt(2,sumaIngreso);
                            pph.setInt(3,sumaGasto);
                            pph.setString(4,mes);
                            pph.executeUpdate();
                            JOptionPane.showMessageDialog(null,"inserto correcto");
                        } catch (SQLException ex) {
                            Logger.getLogger(Sistema.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }else if(fechaa=="2019/04/30")
                    {
                        try {
                            String mes="abril";
                            String SQL="Select SUM(cuanto_gasto) from gastos where fecha BETWEEN '2021/04/01' AND '2021/04/30' ";
                            Statement st=con.createStatement();
                            ResultSet ss=st.executeQuery(SQL);
                            int sumaGasto = 0;
                            if(ss.next()){
                                
                                int totalGasto = ss.getInt("precio");
                                sumaGasto= totalGasto+sumaGasto;
                            }
                            
                            String sql = "Select SUM(cuanto_ingreso) from ingresos where fecha BETWEEN '2021/04/01' AND '2021/04/30' ";
                            Statement mt=con.createStatement();
                            ResultSet pp=mt.executeQuery(sql);
                            int sumaIngreso = 0;
                            if(pp.next()){
                                
                                int totalIngreso = pp.getInt("precio");
                                sumaIngreso= totalIngreso+sumaIngreso;
                            }
                            int total;
                            total=sumaIngreso-sumaGasto;
                            
                            PreparedStatement pph;
                            pph = con.prepareStatement("INSERT INTO Resumen(totall,ingreso,gasto,mess)" + "VALUES (?,?,?,?)");
                            pph.setInt(1,total);
                            pph.setInt(2,sumaIngreso);
                            pph.setInt(3,sumaGasto);
                            pph.setString(4,mes);
                            pph.executeUpdate();
                            JOptionPane.showMessageDialog(null,"inserto correcto");
                        } catch (SQLException ex) {
                            Logger.getLogger(Sistema.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }else if(fechaa=="2021/05/31")
                    {
                        try {
                            String mes="mayo";
                            String SQL="Select SUM(cuanto_gasto) from gastos where fecha BETWEEN '2021/05/01' AND '2021/05/31' ";
                            Statement st=con.createStatement();
                            ResultSet ss=st.executeQuery(SQL);
                            int sumaGasto = 0;
                            if(ss.next()){
                                
                                int totalGasto = ss.getInt("precio");
                                sumaGasto= totalGasto+sumaGasto;
                            }
                            
                            String sql = "Select SUM(cuanto_ingreso) from ingresos where fecha BETWEEN '2021/05/01' AND '2021/05/31' ";
                            Statement mt=con.createStatement();
                            ResultSet pp=mt.executeQuery(sql);
                            int sumaIngreso = 0;
                            if(pp.next()){
                                
                                int totalIngreso = pp.getInt("precio");
                                sumaIngreso= totalIngreso+sumaIngreso;
                            }
                            int total;
                            total=sumaIngreso-sumaGasto;
                            
                            PreparedStatement pph;
                            pph = con.prepareStatement("INSERT INTO Resumen(totall,ingreso,gasto,mess)" + "VALUES (?,?,?,?)");
                            pph.setInt(1,total);
                            pph.setInt(2,sumaIngreso);
                            pph.setInt(3,sumaGasto);
                            pph.setString(4,mes);
                            pph.executeUpdate();
                            JOptionPane.showMessageDialog(null,"inserto correcto");
                        } catch (SQLException ex) {
                            Logger.getLogger(Sistema.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }else if(fechaa=="2021/06/30")
                    {
                        try {
                            String mes="junio";
                            String SQL="Select SUM(cuanto_gasto) from gastos where fecha BETWEEN '2021/05/01' AND '2021/05/30' ";
                            Statement st=con.createStatement();
                            ResultSet ss=st.executeQuery(SQL);
                            int sumaGasto = 0;
                            if(ss.next()){
                                
                                int totalGasto = ss.getInt("precio");
                                sumaGasto= totalGasto+sumaGasto;
                            }
                            
                            String sql = "Select SUM(cuanto_ingreso) from ingresos where fecha BETWEEN '2021/06/01' AND '2021/06/30' ";
                            Statement mt=con.createStatement();
                            ResultSet pp=mt.executeQuery(sql);
                            int sumaIngreso = 0;
                            if(pp.next()){
                                
                                int totalIngreso = pp.getInt("precio");
                                sumaIngreso= totalIngreso+sumaIngreso;
                            }
                            int total;
                            total=sumaIngreso-sumaGasto;
                            
                            PreparedStatement pph;
                            pph = con.prepareStatement("INSERT INTO Resumen(totall,ingreso,gasto,mess)" + "VALUES (?,?,?,?)");
                            pph.setInt(1,total);
                            pph.setInt(2,sumaIngreso);
                            pph.setInt(3,sumaGasto);
                            pph.setString(4,mes);
                            pph.executeUpdate();
                            JOptionPane.showMessageDialog(null,"inserto correcto");
                        } catch (SQLException ex) {
                            Logger.getLogger(Sistema.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }else if(fechaa=="2021/07/31")
                    {
                        try {
                            String mes="julio";
                            String SQL="Select SUM(cuanto_gasto) from gastos where fecha BETWEEN '2021/07/01' AND '2021/07/31' ";
                            Statement st=con.createStatement();
                            ResultSet ss=st.executeQuery(SQL);
                            int sumaGasto = 0;
                            if(ss.next()){
                                
                                int totalGasto = ss.getInt("precio");
                                sumaGasto= totalGasto+sumaGasto;
                            }
                            
                            String sql = "Select SUM(cuanto_ingreso) from ingresos where fecha BETWEEN '2021/07/01' AND '2021/07/31' ";
                            Statement mt=con.createStatement();
                            ResultSet pp=mt.executeQuery(sql);
                            int sumaIngreso = 0;
                            if(pp.next()){
                                
                                int totalIngreso = pp.getInt("precio");
                                sumaIngreso= totalIngreso+sumaIngreso;
                            }
                            int total;
                            total=sumaIngreso-sumaGasto;
                            
                            PreparedStatement pph;
                            pph = con.prepareStatement("INSERT INTO Resumen(totall,ingreso,gasto,mess)" + "VALUES (?,?,?,?)");
                            pph.setInt(1,total);
                            pph.setInt(2,sumaIngreso);
                            pph.setInt(3,sumaGasto);
                            pph.setString(4,mes);
                            pph.executeUpdate();
                            JOptionPane.showMessageDialog(null,"inserto correcto");
                        } catch (SQLException ex) {
                            Logger.getLogger(Sistema.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }else if(fechaa=="2021/08/31")
                    {
                        try {
                            String mes="agosto";
                            String SQL="Select SUM(cuanto_gasto) from gastos where fecha BETWEEN '2021/08/01' AND '2021/08/31' ";
                            Statement st=con.createStatement();
                            ResultSet ss=st.executeQuery(SQL);
                            int sumaGasto = 0;
                            if(ss.next()){
                                
                                int totalGasto = ss.getInt("precio");
                                sumaGasto= totalGasto+sumaGasto;
                            }
                            
                            String sql = "Select SUM(cuanto_ingreso) from ingresos where fecha BETWEEN '2021/08/01' AND '2021/08/31' ";
                            Statement mt=con.createStatement();
                            ResultSet pp=mt.executeQuery(sql);
                            int sumaIngreso = 0;
                            if(pp.next()){
                                
                                int totalIngreso = pp.getInt("precio");
                                sumaIngreso= totalIngreso+sumaIngreso;
                            }
                            int total;
                            total=sumaIngreso-sumaGasto;
                            
                            PreparedStatement pph;
                            pph = con.prepareStatement("INSERT INTO Resumen(totall,ingreso,gasto,mess)" + "VALUES (?,?,?,?)");
                            pph.setInt(1,total);
                            pph.setInt(2,sumaIngreso);
                            pph.setInt(3,sumaGasto);
                            pph.setString(4,mes);
                            pph.executeUpdate();
                            JOptionPane.showMessageDialog(null,"inserto correcto");
                        } catch (SQLException ex) {
                            Logger.getLogger(Sistema.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }else if(fechaa=="2021/09/30")
                    {
                        try {
                            String mes="septiembre";
                            String SQL="Select SUM(cuanto_gasto) from gastos where fecha BETWEEN '2021/09/01' AND '2021/09/30' ";
                            Statement st=con.createStatement();
                            ResultSet ss=st.executeQuery(SQL);
                            int sumaGasto = 0;
                            if(ss.next()){
                                
                                int totalGasto = ss.getInt("precio");
                                sumaGasto= totalGasto+sumaGasto;
                            }
                            
                            String sql = "Select SUM(cuanto_ingreso) from ingresos where fecha BETWEEN '2021/09/01' AND '2021/09/30' ";
                            Statement mt=con.createStatement();
                            ResultSet pp=mt.executeQuery(sql);
                            int sumaIngreso = 0;
                            if(pp.next()){
                                
                                int totalIngreso = pp.getInt("precio");
                                sumaIngreso= totalIngreso+sumaIngreso;
                            }
                            int total;
                            total=sumaIngreso-sumaGasto;
                            
                            PreparedStatement pph;
                            pph = con.prepareStatement("INSERT INTO Resumen(totall,ingreso,gasto,mess)" + "VALUES (?,?,?,?)");
                            pph.setInt(1,total);
                            pph.setInt(2,sumaIngreso);
                            pph.setInt(3,sumaGasto);
                            pph.setString(4,mes);
                            pph.executeUpdate();
                            JOptionPane.showMessageDialog(null,"inserto correcto");
                        } catch (SQLException ex) {
                            Logger.getLogger(Sistema.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        
                    }else if(fechaa=="2021/10/31")
                    {
                        try {
                            String mes="octubre";
                            String SQL="Select SUM(cuanto_gasto) from gastos where fecha BETWEEN '2021/10/01' AND '2021/10/31' ";
                            Statement st=con.createStatement();
                            ResultSet ss=st.executeQuery(SQL);
                            int sumaGasto = 0;
                            if(ss.next()){
                                
                                int totalGasto = ss.getInt("precio");
                                sumaGasto= totalGasto+sumaGasto;
                            }
                            
                            String sql ="Select SUM(cuanto_ingreso) from ingresos where fecha BETWEEN '2021/10/01' AND '2021/10/31' ";
                            Statement mt=con.createStatement();
                            ResultSet pp=mt.executeQuery(sql);
                            int sumaIngreso = 0;
                            if(pp.next()){
                                
                                int totalIngreso = pp.getInt("precio");
                                sumaIngreso= totalIngreso+sumaIngreso;
                            }
                            int total;
                            total=sumaIngreso-sumaGasto;
                            
                            PreparedStatement pph;
                            pph = con.prepareStatement("INSERT INTO Resumen(totall,ingreso,gasto,mess)" + "VALUES (?,?,?,?)");
                            pph.setInt(1,total);
                            pph.setInt(2,sumaIngreso);
                            pph.setInt(3,sumaGasto);
                            pph.setString(4,mes);
                            pph.executeUpdate();
                            JOptionPane.showMessageDialog(null,"inserto correcto");
                        } catch (SQLException ex) {
                            Logger.getLogger(Sistema.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }else if(fechaa=="2021/11/30")
                    {
                        try {
                            String mes="noviembre";
                            String SQL="Select SUM(cuanto_gasto) from gastos where fecha BETWEEN '2021/11/01' AND '2021/11/30' ";
                            Statement st=con.createStatement();
                            ResultSet ss=st.executeQuery(SQL);
                            int sumaGasto = 0;
                            if(ss.next()){
                                
                                int totalGasto = ss.getInt("precio");
                                sumaGasto= totalGasto+sumaGasto;
                            }
                            
                            String sql = "Select SUM(cuanto_ingreso) from ingresos where fecha BETWEEN '2021/11/01' AND '2021/11/30' ";
                            Statement mt=con.createStatement();
                            ResultSet pp=mt.executeQuery(sql);
                            int sumaIngreso = 0;
                            if(pp.next()){
                                
                                int totalIngreso = pp.getInt("precio");
                                sumaIngreso= totalIngreso+sumaIngreso;
                            }
                            int total;
                            total=sumaIngreso-sumaGasto;
                            
                            PreparedStatement pph;
                            pph = con.prepareStatement("INSERT INTO Resumen(totall,ingreso,gasto,mess)" + "VALUES (?,?,?,?)");
                            pph.setInt(1,total);
                            pph.setInt(2,sumaIngreso);
                            pph.setInt(3,sumaGasto);
                            pph.setString(4,mes);
                            pph.executeUpdate();
                            JOptionPane.showMessageDialog(null,"inserto correcto");
                        } catch (SQLException ex) {
                            Logger.getLogger(Sistema.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }else if(fechaa=="2021/12/31"){
                        try {
                            String mes="diciembre";
                            String SQL="Select SUM(cuanto_gasto) from gastos where fecha BETWEEN '2021/12/01' AND '2021/12/31' ";
                            Statement st=con.createStatement();
                            ResultSet ss=st.executeQuery(SQL);
                            int sumaGasto = 0;
                            if(ss.next()){
                                
                                int totalGasto = ss.getInt("precio");
                                sumaGasto= totalGasto+sumaGasto;
                            }
                            
                            String sql = "Select SUM(cuanto_ingreso) from ingresos where fecha BETWEEN '2021/12/01' AND '2021/12/31' ";
                            Statement mt=con.createStatement();
                            ResultSet pp=mt.executeQuery(sql);
                            int sumaIngreso = 0;
                            if(pp.next()){
                                
                                int totalIngreso = pp.getInt("precio");
                                sumaIngreso= totalIngreso+sumaIngreso;
                            }
                            int total;
                            total=sumaIngreso-sumaGasto;
                            
                            PreparedStatement pph;
                            pph = con.prepareStatement("INSERT INTO Resumen(totall,ingreso,gasto,mess)" + "VALUES (?,?,?,?)");
                            pph.setInt(1,total);
                            pph.setInt(2,sumaIngreso);
                            pph.setInt(3,sumaGasto);
                            pph.setString(4,mes);
                            pph.executeUpdate();
                            JOptionPane.showMessageDialog(null,"inserto correcto");
                        } catch (SQLException ex) {
                            Logger.getLogger(Sistema.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                    
                    
                } catch (SQLException ex) {
                    Logger.getLogger(Sistema.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(null,"inserto incorrecto");
                }
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(Sistema.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btncierreActionPerformed

    private void btnsocioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsocioActionPerformed
        try {
            VerSocios form=new VerSocios();
            form.setVisible(true);
           // this.dispose();
        } catch (SQLException ex) {
            Logger.getLogger(Sistema.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnsocioActionPerformed

    private void MenuPedidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuPedidosActionPerformed
Pedidos form=new Pedidos();
                    form.setVisible(true);
                    
    }//GEN-LAST:event_MenuPedidosActionPerformed

    private void MenuPedidosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuPedidosMouseClicked
           Pedidos form=new Pedidos();
           //CentrarVentana(form);
                    form.setVisible(true);
                    
                   // this.dispose();
    }//GEN-LAST:event_MenuPedidosMouseClicked

    private void MenuCerrarSecionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuCerrarSecionMouseClicked
          System.exit(0);
    }//GEN-LAST:event_MenuCerrarSecionMouseClicked

    private void MenuPrincipalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuPrincipalMouseClicked
        this.dispose(); 
        Sistema form=new Sistema();
        form.setVisible(true);
                   // dispose();
    }//GEN-LAST:event_MenuPrincipalMouseClicked

 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Sistema.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Sistema.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Sistema.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sistema.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Sistema().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu MenuCerrarSecion;
    private javax.swing.JMenu MenuPedidos;
    private javax.swing.JMenu MenuPrincipal;
    private javax.swing.JPanel VentanaPrincipal;
    private javax.swing.JButton btnGastos;
    private javax.swing.JButton btnalquileres;
    private javax.swing.JButton btncierre;
    private javax.swing.JButton btnganancia;
    private javax.swing.JButton btngastos;
    private javax.swing.JButton btningresealquiler;
    private javax.swing.JButton btningresesocio;
    private javax.swing.JButton btningresos;
    private javax.swing.JButton btnsocio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenu jMenu8;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    // End of variables declaration//GEN-END:variables

}

